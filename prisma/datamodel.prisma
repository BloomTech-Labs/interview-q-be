type Post {
  id: ID! @id
  price: Int!
  position: String!
  industry: Industry!
  description: String!
  coachID: String! @unique
  createdAt: DateTime! @createdAt
  lastUpdated: DateTime! @updatedAt
  company: String!
  isPublished: Boolean! @default(value: true)
  desc_lc: String!
  company_lc: String!
  position_lc: String!
  tags: [Tag]!
  # coach: User @provides(fields: "email") @relation(link: TABLE name: "UserOnPost", onDelete: SET_NULL)
  # ratingsId: ID!
}
type Industry {
	id: ID! @id
	name: String! @unique
  posts: [Post]!
}

type Tag {
  id: ID! @id
  name: String! @unique
  posts: [Post]!
}

type Availability {
  id: ID! @id
  start_hour: Int!
  start_minute: Int!
  coach: String!
  bookingID: String
	year: Int!
	month: Int!
	day: Int!
  uniquecheck: String! @unique
	isOpen: Boolean!
	recurring: Boolean!
}

type Booking {
  id: ID! @id
  year: Int!
  month: Int!
  day: Int!
  hour: Int!
  minute: Int!
  coach: String!
  seeker: String!
  uniquecheck: String! @unique
  availability: [Availability]!
	pending: Boolean
	confirmed: Boolean
}

# type User {
#  id: ID! @id
#  email: String! @unique
#  post: Post @relation(name: "UserOnPost", onDelete: CASCADE)
 # coach_bookings: [Booking] @relation(name: "CoachBookings", onDelete: CASCADE)
  # seeker_bookings: [Booking] @relation(name: "SeekerBookings", onDelete: CASCADE)
  # availability: [Availability]
# }
